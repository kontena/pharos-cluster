<% if config.node_exporter.enabled %>
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: kontena-stats
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      name: node-exporter
      phase: prod
  template:
    metadata:
      labels:
        name: node-exporter
        phase: prod
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      #serviceAccountName: node-exporter
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      hostNetwork: true
      hostPID: true
      containers:
      - name: node-exporter
        image: <%= image_repository %>/prometheus-node-exporter:v<%= node_exporter_version %>
        args:
          - --path.procfs=/host/proc
          - --path.sysfs=/host/sys
          - --path.rootfs=/host/root
          - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker|var/lib/containers/.+)($|/)
          - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
        ports:
          - name: metrics
            containerPort: 9100
            hostPort: 9100
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 200m
            memory: 100Mi
        volumeMounts:
          - name: proc
            mountPath: /host/proc
            readOnly:  true
          - name: sys
            mountPath: /host/sys
            readOnly: true
          - name: root
            mountPath: /host/root
            readOnly: true
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: root
          hostPath:
            path: /
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter-proxy
  namespace: kontena-stats
  labels:
    component: node-exporter-proxy
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      component: node-exporter-proxy
      phase: prod
  template:
    metadata:
      labels:
        component: node-exporter-proxy
        phase: prod
    spec:
      tolerations:
        - effect: NoSchedule
          operator: Exists
      containers:
        - name: scraper
          image: <%= image_repository %>/pharos-scraper-proxy:0.2.0
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 10m
              memory: 10Mi
            limits:
              cpu: 200m
              memory: 20Mi
          env:
            - name: NODE_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: BACKEND_ADDRESS
              value: "http://$(NODE_ADDRESS):9100/metrics"
<% end %>
