pipeline:
  test-ruby:
    image: ruby:2.5
    commands:
      - gem install bundler -Nf
      - bundle install --path bundler
      - bundle exec rubocop --fail-level A -S --format c --parallel
      - bundle exec rspec spec/
      - PHAROS_NON_OSS=true bundle exec rspec non-oss/spec/
  test-shellcheck:
    image: koalaman/shellcheck-alpine:latest
    commands:
      - apk update && apk add bash
      - bash -c 'shopt -s globstar; shellcheck **/*.sh'
  # E2E steps
  setup-bionic-e2e:
    image: docker.io/hashicorp/terraform:0.11.10
    secrets: [ digitalocean_token ]
    commands:
      - ./e2e/drone_setup.sh ubuntu-18-04-x64
    when:
      event: [ push ]
  bionic-e2e:
    image: ruby:2.5
    commands:
      - gem install bundler -Nf
      - bundle install --path bundler
      - ./e2e/drone.sh
    when:
      event: [ push ]
  teardown-bionic-e2e:
    image: docker.io/hashicorp/terraform:0.11.10
    secrets: [ digitalocean_token ]
    commands:
      - ./e2e/drone_teardown.sh
    when:
      event: [ push ]
      status: [ failure, success ]

  setup-centos-e2e:
    image: docker.io/hashicorp/terraform:0.11.10
    secrets: [ digitalocean_token ]
    commands:
      - ./e2e/drone_setup.sh centos-7-x64
    when:
      event: [ push ]
  centos-e2e:
    image: ruby:2.5
    commands:
      - gem install bundler -Nf
      - bundle install --path bundler
      - ./e2e/drone.sh
    when:
      event: [ push ]
  teardown-centos-e2e:
    image: docker.io/hashicorp/terraform:0.11.10
    secrets: [ digitalocean_token ]
    commands:
      - ./e2e/drone_teardown.sh
    when:
      event: [ push ]
      status: [ failure, success ]

  # Release steps
  create_gh_release:
    image: ubuntu:xenial
    secrets: [ github_token ]
    commands:
      - ./build/drone/create_release.sh
    when:
      event: tag
  build_ubuntu:
    image: ubuntu:xenial
    environment:
      - CPPFLAGS=-P
      - PHAROS_NON_OSS=true
    commands:
      - ./build/drone/ubuntu.sh
    when:
      event: tag
  release_binary:
    image: plugins/s3
    secrets: [ aws_access_key_id, aws_secret_access_key ]
    bucket: pharos-cluster-binaries
    region: eu-west-1
    source: "pharos-cluster-linux-amd64-${DRONE_TAG##v}"
    target: /
    when:
      event: tag
  build_ubuntu_oss:
    image: ubuntu:xenial
    secrets: [ github_token ]
    environment:
      - CPPFLAGS=-P
    commands:
      - ./build/drone/ubuntu_oss.sh
    when:
      event: tag
  release_binary_oss:
    image: plugins/s3
    secrets: [ aws_access_key_id, aws_secret_access_key ]
    bucket: pharos-cluster-binaries
    region: eu-west-1
    source: "pharos-cluster-linux-amd64-${DRONE_TAG##v}+oss"
    target: /
    when:
      event: tag
